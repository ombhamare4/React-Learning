{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\omrub\\\\Desktop\\\\Next.js\\\\React-Learning\\\\next-project-2\\\\pages\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}; // export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res; \n//     // Fetch data on from API on server not on client side\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//         //Here not required revalidate because every request come in this function automatically revalidate\n//     };\n// };\n\n\nexport async function getStaticProps() {\n  // This function return something which is not visible to any client \n  //It use to fetch API \n  //It returns an Object\n  const client = await MongoClient.connect(\"mongodb+srv://webRubik:test'OR'a'='a'@web-db.qjovo.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const Meetups_Data = await meetupsCollection.find().toArray(); //Find will find all meetups from collection\n\n  return {\n    //Set Props poerty here. it is necessary and that props hold other object\n    //Which will received props in your component function\n    props: {\n      meetups: Meetups_Data.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description,\n        id: meetup._id.toString()\n      }))\n    },\n    //It referse the page \n    revalidate: 1\n  };\n}\n;\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/omrub/Desktop/Next.js/React-Learning/next-project-2/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","Meetups_Data","find","toArray","map","meetup","title","address","image","description","id","_id","toString","revalidate"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,sBACI;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAPD,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA;AACA;AAEA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,oGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,YAAY,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,EAA3B,CAVmC,CAU4B;;AAG/D,SAAO;AACH;AACA;AACAV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEO,YAAY,CAACG,GAAb,CAAiBC,MAAM,KAAK;AACjCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADmB;AAEjCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFiB;AAGjCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHmB;AAIjCC,QAAAA,WAAW,EAAEJ,MAAM,CAACI,WAJa;AAKjCC,QAAAA,EAAE,EAAEL,MAAM,CAACM,GAAP,CAAWC,QAAX;AAL6B,OAAL,CAAvB;AADN,KAHJ;AAYH;AACAC,IAAAA,UAAU,EAAE;AAbT,GAAP;AAeH;AAAA;AAED,eAAerB,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupList from '../components/meetups/MeetupList'\r\n\r\n\r\nconst HomePage = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <MeetupList meetups={props.meetups} />\r\n        </>\r\n    )\r\n};\r\n\r\n// export async function getServerSideProps(context) {\r\n//     const req = context.req;\r\n//     const res = context.res; \r\n//     // Fetch data on from API on server not on client side\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS\r\n//         }\r\n//         //Here not required revalidate because every request come in this function automatically revalidate\r\n//     };\r\n\r\n// };\r\n\r\nexport async function getStaticProps() {\r\n    // This function return something which is not visible to any client \r\n    //It use to fetch API \r\n    //It returns an Object\r\n\r\n    const client = await MongoClient.connect(\"mongodb+srv://webRubik:test'OR'a'='a'@web-db.qjovo.mongodb.net/meetups?retryWrites=true&w=majority\");\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const Meetups_Data = await meetupsCollection.find().toArray(); //Find will find all meetups from collection\r\n\r\n\r\n    return {\r\n        //Set Props poerty here. it is necessary and that props hold other object\r\n        //Which will received props in your component function\r\n        props: {\r\n            meetups: Meetups_Data.map(meetup => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                description: meetup.description,\r\n                id: meetup._id.toString()\r\n            }))\r\n        },\r\n        //It referse the page \r\n        revalidate: 1\r\n    };\r\n};\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}