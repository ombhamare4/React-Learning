{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\omrub\\\\Desktop\\\\Next.js\\\\React-Learning\\\\next-project-2\\\\pages\\\\index.js\",\n    _this = this;\n\nimport MeetupList from '../components/meetups/MeetupList';\nvar DUMMY_MEETUPS = [{\n  id: 1,\n  title: \"InterView\",\n  image: \"https://c4.wallpaperflare.com/wallpaper/952/824/961/makoto-shinkai-kimi-no-na-wa-wallpaper-preview.jpg\",\n  address: \"Tokyo\"\n}, {\n  id: 2,\n  title: \"Language School Admission\",\n  image: \"https://c4.wallpaperflare.com/wallpaper/945/578/382/osaka-city-lights-wallpaper-preview.jpg\",\n  address: \"Osaka\"\n}, {\n  id: 3,\n  title: \"Weeding\",\n  image: \"https://c4.wallpaperflare.com/wallpaper/382/472/58/night-the-city-lights-spring-wallpaper-preview.jpg\",\n  address: \"Kyoto\"\n}, {\n  id: 4,\n  title: \"Tour\",\n  image: \"https://c4.wallpaperflare.com/wallpaper/994/253/68/japan-mountains-mount-fuji-asian-architecture-wallpaper-preview.jpg\",\n  address: \"Kyoto\"\n}];\n\nvar HomePage = function HomePage(props) {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //     setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n}; // export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res; \n//     // Fetch data on from API on server not on client side\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//         //Here not required revalidate because every request come in this function automatically revalidate\n//     };\n// };\n\n\n_c = HomePage;\n;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/omrub/Desktop/Next.js/React-Learning/next-project-2/pages/index.js"],"names":["MeetupList","DUMMY_MEETUPS","id","title","image","address","HomePage","props","meetups"],"mappings":";;;;;;AAEA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,IAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,WAFX;AAGIC,EAAAA,KAAK,EAAE,wGAHX;AAIIC,EAAAA,OAAO,EAAE;AAJb,CADkB,EAOlB;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,2BAFX;AAGIC,EAAAA,KAAK,EAAE,6FAHX;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAPkB,EAalB;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,SAFX;AAGIC,EAAAA,KAAK,EAAE,uGAHX;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAbkB,EAmBlB;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,MAFX;AAGIC,EAAAA,KAAK,EAAE,wHAHX;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAnBkB,CAAtB;;AA6BA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAExB;AAEA;AAEA;AACA;AAEA,sBACI;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAdD,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;KA3BMF,Q;AAyDL;;AAED,eAAeA,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupList from '../components/meetups/MeetupList'\r\nconst DUMMY_MEETUPS = [\r\n    {\r\n        id: 1,\r\n        title: \"InterView\",\r\n        image: \"https://c4.wallpaperflare.com/wallpaper/952/824/961/makoto-shinkai-kimi-no-na-wa-wallpaper-preview.jpg\",\r\n        address: \"Tokyo\",\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Language School Admission\",\r\n        image: \"https://c4.wallpaperflare.com/wallpaper/945/578/382/osaka-city-lights-wallpaper-preview.jpg\",\r\n        address: \"Osaka\",\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Weeding\",\r\n        image: \"https://c4.wallpaperflare.com/wallpaper/382/472/58/night-the-city-lights-spring-wallpaper-preview.jpg\",\r\n        address: \"Kyoto\",\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"Tour\",\r\n        image: \"https://c4.wallpaperflare.com/wallpaper/994/253/68/japan-mountains-mount-fuji-asian-architecture-wallpaper-preview.jpg\",\r\n        address: \"Kyoto\",\r\n    },\r\n\r\n\r\n]\r\n\r\nconst HomePage = (props) => {\r\n\r\n    // const [loadedMeetups, setLoadedMeetups] = useState([]);\r\n\r\n    // useEffect(() => {\r\n\r\n    //     setLoadedMeetups(DUMMY_MEETUPS);\r\n    // }, []);\r\n\r\n    return (\r\n        <>\r\n            <MeetupList meetups={props.meetups} />\r\n        </>\r\n    )\r\n};\r\n\r\n// export async function getServerSideProps(context) {\r\n//     const req = context.req;\r\n//     const res = context.res; \r\n//     // Fetch data on from API on server not on client side\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS\r\n//         }\r\n//         //Here not required revalidate because every request come in this function automatically revalidate\r\n//     };\r\n\r\n// };\r\n\r\nexport async function getStaticProps() {\r\n    // This function return something which is not visible to any client \r\n    //It use to fetch API \r\n    //It returns an Object\r\n\r\n    const client = await MongoClient.connect(\"mongodb+srv://webRubik:test'OR'a'='a'@web-db.qjovo.mongodb.net/meetups?retryWrites=true&w=majority\");\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const Meetups_Data = await meetupsCollection.find().toArray(); //Find will find all meetups from collection\r\n\r\n\r\n    return {\r\n        //Set Props poerty here. it is necessary and that props hold other object\r\n        //Which will received props in your component function\r\n        props: {\r\n            meetups: Meetups_Data.map(meetup => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                description: meetup.description,\r\n                id: meetup._id.toString()\r\n            }))\r\n        },\r\n        //It referse the page \r\n        revalidate: 1\r\n    };\r\n};\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}